// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zadatak.Models;

namespace zadatak.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201029152619_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("zadatak.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Email = "frank.luna@mail.com",
                            FullName = "Frank Luna",
                            ImageUrl = "avatar1",
                            PhoneNumber = "789-777-356"
                        },
                        new
                        {
                            id = 2,
                            Email = "tomas.moller@mail.com",
                            FullName = "Tomas Moller",
                            ImageUrl = "avatar2",
                            PhoneNumber = "466-222-333"
                        },
                        new
                        {
                            id = 3,
                            Email = "eric.haines@mail.com",
                            FullName = "Eric Haines",
                            ImageUrl = "avatar3",
                            PhoneNumber = "888-999-234"
                        },
                        new
                        {
                            id = 4,
                            Email = "thomas.cormen@mail.com",
                            FullName = "Thomas E. Cormen",
                            ImageUrl = "avatar4",
                            PhoneNumber = "567-222-465"
                        },
                        new
                        {
                            id = 5,
                            Email = "count.saint.germain@mail.com",
                            FullName = "Count Saint Germain",
                            ImageUrl = "avatar5",
                            PhoneNumber = "737-922-495"
                        },
                        new
                        {
                            id = 6,
                            Email = "franz.mesmer@mail.com",
                            FullName = "Franz Mesmer",
                            ImageUrl = "avatar6",
                            PhoneNumber = "837-555-133"
                        },
                        new
                        {
                            id = 7,
                            Email = "erzsebet.bathory@mail.com",
                            FullName = "Erzsebet Bathory",
                            ImageUrl = "avatar7",
                            PhoneNumber = "666-666-666"
                        },
                        new
                        {
                            id = 8,
                            Email = "mislav.mihajlovic@mail.com",
                            FullName = "Mislav Mihajlovic",
                            ImageUrl = "avatar8",
                            PhoneNumber = "123-321-456"
                        });
                });

            modelBuilder.Entity("zadatak.Models.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRoles");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            EmployeeId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            EmployeeId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            EmployeeId = 6,
                            RoleId = 3
                        },
                        new
                        {
                            EmployeeId = 8,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("zadatak.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            id = 2,
                            Name = "User"
                        },
                        new
                        {
                            id = 3,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("zadatak.Models.EmployeeRole", b =>
                {
                    b.HasOne("zadatak.Models.Employee", "employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zadatak.Models.Role", "role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
